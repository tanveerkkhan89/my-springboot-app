name: mvn-build and deploy
on:
  push:
    branches:
      - main

env:
  AWS_REGION: 'us-east-2'
  CLUSTER_NAME: "example-eks-cluster"
  VPC_ID: "vpc-02c20a702d1dc083f"
  HELM_SCRIPT_DIRECTORY: "my-spring-app"

permissions:
  id-token: write      # Required for requesting a JWT for OIDC authentication
  contents: write      # Required for actions/checkout and any writes to the repository
  packages: write      # Required for actions/setup-node and npm install (if you are using packages)

jobs:
  output_env_vars:
    runs-on: ubuntu-latest
    outputs:
      AWS_REGION: ${{ env.AWS_REGION }}
      CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
      VPC_ID: ${{ env.VPC_ID }}
      HELM_SCRIPT_DIRECTORY: ${{ env.HELM_SCRIPT_DIRECTORY }}
    steps:
      - name: Set output env vars
        run: |
          echo "set output env vars for resuse"

  mvn_and_docker_build:
    uses: tanveerkkhan89/github-reuseable-action/.github/workflows/mvn-docker-build.yml@main
    needs: output_env_vars
    with:
      java_version: '17'
      docker_image_name: 'my-image'
      docker_build_args: '--build-arg JAR_NAME=helloworld-$IMAGE_TAG.jar'
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      
  my_app_helm_deploy:
    uses: tanveerkkhan89/github-reuseable-action/.github/workflows/helm.yml@main
    needs: [ mvn_and_docker_build, output_env_vars ]
    with:
      eks_cluster_name: ${{ needs.output_env_vars.outputs.CLUSTER_NAME }}
      aws_region: ${{ needs.output_env_vars.outputs.AWS_REGION }}
      helm_script_directory: ${{ needs.output_env_vars.outputs.HELM_SCRIPT_DIRECTORY }}
      helm_script_name: "springboot-deploy.sh"
      helm_script_args: "my-release ${{ needs.mvn_and_docker_build.outputs.IMAGE_TAG }}"
      # inputs are RELEASE_NAME=$1 IMAGE_TAG=$2
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  version_bump_type:
    runs-on: ubuntu-latest
    needs: [ mvn_and_docker_build, my_app_helm_deploy, output_env_vars ]
    outputs:
      version_bump_type: ${{ steps.set_version_bump_type.outputs.version_bump_type }}
    steps:
      - name: Set version bump type
        id: set_version_bump_type
        run: |
          # if branch is main, bump version by patch 
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            version_bump_type="patch"
          fi
          echo "version_bump_type=${version_bump_type}" >> $GITHUB_ENV
          echo "version_bump_type=${version_bump_type}" >> $GITHUB_OUTPUT

  bump_app_version:
    uses: tanveerkkhan89/github-reuseable-action/.github/workflows/mvn-bump-version.yml@main
    needs: [ output_env_vars, mvn_and_docker_build, my_app_helm_deploy, version_bump_type ]
    if: ${{ !failure() }}
    with:
      java_version: '17'
      version_bump: ${{ needs.version_bump_type.outputs.version_bump_type }}
